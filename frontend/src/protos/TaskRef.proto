
syntax = "proto3";
import "google/protobuf/empty.proto";
service TaskRefService {
    rpc create_task_ref(CreateTaskRefRequest) returns(google.protobuf.Empty);
    rpc get_task_ref(GetTaskRefRequest) returns (GetTaskRefResponse);
    rpc get_all_task_refs(google.protobuf.Empty) returns (GetAllTaskRefResponse);
    rpc update_task_ref(UpdateTaskRefRequest) returns (google.protobuf.Empty);
    rpc delete_task_ref(DeleteTaskRefRequest) returns (google.protobuf.Empty);
    rpc delete_all_task_refs(google.protobuf.Empty) returns (DeleteAllTaskRefResponse);
}

//taskRef type
message TaskRef{
    string id_task_ref = 1;
    string id_task = 2;
    int32 id_list = 3;
    bool selected = 4;
}

//create task ref
message CreateTaskRefRequest {
    string id_task = 1;
    int32 id_list = 2;
    }

//get task ref
message GetTaskRefRequest {
    string id_task_ref = 1;
}

message GetTaskRefResponse {
   TaskRef task_ref = 1;
}

//delete task ref
message DeleteTaskRefRequest {
    string id_task_ref = 1;
}

// update task ref
message UpdateTaskRefRequest {
    string id_task_ref = 1;
    string id_task = 2;
    int32 id_list = 3;
    bool selected = 4;

} 

//get all tasks res
message GetAllTaskRefResponse {
    repeated TaskRef task_refs = 1;
}

//delete all tasks res
message DeleteAllTaskRefResponse{
int32 amount_of_deleted_task_refs = 1;
}