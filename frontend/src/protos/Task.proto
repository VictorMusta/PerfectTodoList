syntax = "proto3";
import "google/protobuf/empty.proto";
service TaskService {
  rpc create_task(CreateTaskRequest) returns (google.protobuf.Empty);
  rpc get_task(GetTaskRequest) returns (GetTaskResponse);
  rpc get_all_tasks(google.protobuf.Empty) returns (GetAllTasksResponse);
  rpc update_task(UpdateTaskRequest) returns (google.protobuf.Empty);
  rpc delete_task(DeleteTaskRequest) returns (google.protobuf.Empty);
  rpc delete_all_tasks(google.protobuf.Empty) returns (DeleteAllTasksResponse);
}
message string {
  string value = 1;
}
  //enum for status of task
  enum Status {
    RESOLVED = 0;
    UNRESOLVED = 1;
  }


  //task type message
  message Task {
    string id_task = 1;
    string title = 2;
    string color = 3;
    Status resolved = 4;
  }


  //create task
  message CreateTaskRequest {
    string title = 1;
  }


  //get task 
  message GetTaskRequest {
    string id_task = 1;
  }

  message GetTaskResponse {
    Task task = 1;
  }


  //update task
  message UpdateTaskRequest {
    string id_task = 1;
    string title = 2;
    string color = 3;
    Status resolved = 4;
  } 
  

  //delete task
  message DeleteTaskRequest {
    string id_task = 1;
  }


  //get all tasks res
  message GetAllTasksResponse {
    repeated Task tasks = 1;
  }
  

  //delete all tasks res
  message DeleteAllTasksResponse{
    int32 amount_of_deleted_tasks = 1;
  }
