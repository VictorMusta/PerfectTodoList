/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: TaskRefs.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as TaskRefs_pb from './TaskRefs_pb';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';


export class TaskRefsServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorcreate_task_ref = new grpcWeb.MethodDescriptor(
    '/TaskRefsService/create_task_ref',
    grpcWeb.MethodType.UNARY,
    TaskRefs_pb.CreateTaskRefRequest,
    google_protobuf_empty_pb.Empty,
    (request: TaskRefs_pb.CreateTaskRefRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  create_task_ref(
    request: TaskRefs_pb.CreateTaskRefRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  create_task_ref(
    request: TaskRefs_pb.CreateTaskRefRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  create_task_ref(
    request: TaskRefs_pb.CreateTaskRefRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/TaskRefsService/create_task_ref',
        request,
        metadata || {},
        this.methodDescriptorcreate_task_ref,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/TaskRefsService/create_task_ref',
    request,
    metadata || {},
    this.methodDescriptorcreate_task_ref);
  }

  methodDescriptorget_task_ref = new grpcWeb.MethodDescriptor(
    '/TaskRefsService/get_task_ref',
    grpcWeb.MethodType.UNARY,
    TaskRefs_pb.GetTaskRefRequest,
    TaskRefs_pb.GetTaskRefResponse,
    (request: TaskRefs_pb.GetTaskRefRequest) => {
      return request.serializeBinary();
    },
    TaskRefs_pb.GetTaskRefResponse.deserializeBinary
  );

  get_task_ref(
    request: TaskRefs_pb.GetTaskRefRequest,
    metadata: grpcWeb.Metadata | null): Promise<TaskRefs_pb.GetTaskRefResponse>;

  get_task_ref(
    request: TaskRefs_pb.GetTaskRefRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: TaskRefs_pb.GetTaskRefResponse) => void): grpcWeb.ClientReadableStream<TaskRefs_pb.GetTaskRefResponse>;

  get_task_ref(
    request: TaskRefs_pb.GetTaskRefRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: TaskRefs_pb.GetTaskRefResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/TaskRefsService/get_task_ref',
        request,
        metadata || {},
        this.methodDescriptorget_task_ref,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/TaskRefsService/get_task_ref',
    request,
    metadata || {},
    this.methodDescriptorget_task_ref);
  }

  methodDescriptorget_all_task_refs = new grpcWeb.MethodDescriptor(
    '/TaskRefsService/get_all_task_refs',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    TaskRefs_pb.GetAllTaskRefsResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    TaskRefs_pb.GetAllTaskRefsResponse.deserializeBinary
  );

  get_all_task_refs(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<TaskRefs_pb.GetAllTaskRefsResponse>;

  get_all_task_refs(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: TaskRefs_pb.GetAllTaskRefsResponse) => void): grpcWeb.ClientReadableStream<TaskRefs_pb.GetAllTaskRefsResponse>;

  get_all_task_refs(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: TaskRefs_pb.GetAllTaskRefsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/TaskRefsService/get_all_task_refs',
        request,
        metadata || {},
        this.methodDescriptorget_all_task_refs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/TaskRefsService/get_all_task_refs',
    request,
    metadata || {},
    this.methodDescriptorget_all_task_refs);
  }

  methodDescriptorupdate_task_ref = new grpcWeb.MethodDescriptor(
    '/TaskRefsService/update_task_ref',
    grpcWeb.MethodType.UNARY,
    TaskRefs_pb.UpdateTaskRefRequest,
    google_protobuf_empty_pb.Empty,
    (request: TaskRefs_pb.UpdateTaskRefRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  update_task_ref(
    request: TaskRefs_pb.UpdateTaskRefRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  update_task_ref(
    request: TaskRefs_pb.UpdateTaskRefRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  update_task_ref(
    request: TaskRefs_pb.UpdateTaskRefRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/TaskRefsService/update_task_ref',
        request,
        metadata || {},
        this.methodDescriptorupdate_task_ref,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/TaskRefsService/update_task_ref',
    request,
    metadata || {},
    this.methodDescriptorupdate_task_ref);
  }

  methodDescriptordelete_task_ref = new grpcWeb.MethodDescriptor(
    '/TaskRefsService/delete_task_ref',
    grpcWeb.MethodType.UNARY,
    TaskRefs_pb.DeleteTaskRefRequest,
    google_protobuf_empty_pb.Empty,
    (request: TaskRefs_pb.DeleteTaskRefRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete_task_ref(
    request: TaskRefs_pb.DeleteTaskRefRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete_task_ref(
    request: TaskRefs_pb.DeleteTaskRefRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete_task_ref(
    request: TaskRefs_pb.DeleteTaskRefRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/TaskRefsService/delete_task_ref',
        request,
        metadata || {},
        this.methodDescriptordelete_task_ref,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/TaskRefsService/delete_task_ref',
    request,
    metadata || {},
    this.methodDescriptordelete_task_ref);
  }

  methodDescriptordelete_all_task_refs = new grpcWeb.MethodDescriptor(
    '/TaskRefsService/delete_all_task_refs',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    TaskRefs_pb.DeleteAllTaskRefsResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    TaskRefs_pb.DeleteAllTaskRefsResponse.deserializeBinary
  );

  delete_all_task_refs(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<TaskRefs_pb.DeleteAllTaskRefsResponse>;

  delete_all_task_refs(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: TaskRefs_pb.DeleteAllTaskRefsResponse) => void): grpcWeb.ClientReadableStream<TaskRefs_pb.DeleteAllTaskRefsResponse>;

  delete_all_task_refs(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: TaskRefs_pb.DeleteAllTaskRefsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/TaskRefsService/delete_all_task_refs',
        request,
        metadata || {},
        this.methodDescriptordelete_all_task_refs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/TaskRefsService/delete_all_task_refs',
    request,
    metadata || {},
    this.methodDescriptordelete_all_task_refs);
  }

}

